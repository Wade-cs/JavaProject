项目备注：

/**
*   时间：2021年12月27号
*   团队：<下次我请客>以及<下次我请客的乖儿子>
*/

    day01

        界面的背景图是直接加入到Label,并且背景图是以ImageIcon类提取文件，所以更改大小，需要在原图上重新更改。
        image包里的
            0.jpg   是主界面背景图
            1.jpg   是查询地址的背景图、
            2.jpg   是查询路线的校园地图
            3.jpg   是查询路线右边部分的插图
            xxx 4.jpg   是增加地点的背景图 xxx
            xxx 5.jpg   是删除地点的背景图 xxx
            logo.jpg    是校徽<不能太大,太大无法替换咖啡图标>
            地图

        把基本的界面设计完成，并设计好了所需的条件属性
        /**
         * 备注：
         * String[] name 地点名称
         * Node[] dian 记录每个地点的坐标<Node是一个简单的类，存放点的x，y信息>
         * int cnt  所有地点坐标的数字标记<在写入文件的时候，统计当前一共有多少个的地点>
         * String[] introduction 地点的介绍
         * can[][] 二维数组 记录两点之间的连接关系 即邻接矩阵
         *          举例：can[1][2] = can[2][1] = 1 ==> 即 标记为1的地方和标记为2的地方 有路
         * map[][] 二维数组 记录两点之间的距离
         * boolean vis[]  表示对应标号的地点是否可以带入算法...换言之就是该点是否存在，因为这次实训还有删除地点要求。
         * ans 存储 最短路径结点
         * pre 存放各点上的<最短路径>前驱
         * dis dijkstra算法所用起点到其他点的距离
         * vis1   dijkstra算法所用flag
         * plan_cnt  最短路径的经过点数
         */

    day02

        完成了最关键的工具类solve方法类，文件的读取以及写入。
        迪杰斯特拉算法所需的邻接矩阵的构建
        以及map[][]的更新<添加地点，以及调用solve方法时>

        目前需要时间的bug是
            地图的路口设计有问题，有很多重名的路口，以至于地点间的连通性有问题。

            在测试现有可行的路线时，发现在图上画点，和画线的坐标，必须从整个窗体的左上角开始计算。

            <day03临时发现，不能在solve读取的时候更改点的数据。要改也是在绘图的地方加建。不然的话，点的y坐标回一点一点上升。>
            <或者可以solve读取点信息的时候，在纵坐标上添加一个窗体边框34像素>
            所以，每个地点的位置消息，需要重新统计。

        待解决的bug是

            xxx 窗体右上角的咖啡图标无法就行替换。（刚才灵机一动，把景院的校徽改小点，就行了） xxx

    day03

        我和我的乖儿子一起分别把地址的坐标信息以及连通关系写入了，file/map1.txt以及file/site1.txt

        题目要求的删除地点的要求，我们不能忍。毕竟所有的地点位置信息都是一个一个登记出来的。

        所以，我们在file备份了一份完整的数据。

        <备注：删除地址的密码是123456789>

        经过反馈，特别在删除和添加地点的窗体，换成地图本身，这样用户也就更加直观。
        并且在添加地点的地方，在背景图片标签添加了鼠标的点击，实时提取x、y坐标，直接传入添加地点的x、y坐标信息。

    day04

        经过昨天的界面改进，我们可以设计一个窗口，
        利用鼠标点击事件，直观获取要地点的x、y坐标，而不是在ps将原数据的地点信息一个个添加进去。<*_* 后知后觉 *_* >
